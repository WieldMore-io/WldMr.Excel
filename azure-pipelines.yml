trigger:
- '*'

pool:
  name: Azure Pipelines
  vmImage: 'ubuntu-latest'

variables:
   major: 0
   minor: 1
   revision: 0
   patch: $[counter(format('{0}.{1}.{2}', variables['Major'], variables['Minor'], variables['Revision']), 0)]
   packageVersion: $(major).$(minor).$(revision).$(patch)-preview
   NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
   nugetApiKey: $(NUGET_API_KEY)
   isNotaPR: $[ne(variables['Build.Reason'], 'PullRequest')]

name: $(major).$(minor).$(revision).$(patch)-preview

steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet tool restore'
  inputs:
    command: custom
    custom: tool
    arguments: restore

- task: DotNetCoreCLI@2
  displayName: 'dotnet paket restore'
  inputs:
    command: custom
    custom: paket
    arguments: 'restore'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.fsproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'packageVersion'
    configuration: Release
    arguments: '/p:Version=$(packageVersion) /p:InformationalVersion=$(packageVersion)-$(Build.SourceVersion)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'

- task: DotNetCoreCLI@2
  displayName: Push to nuget.org
  condition: and(succeeded(), eq(variables.pushToNugetOrg, true), eq(variables.isNotaPR, true))
  inputs:
    command: custom
    custom: nuget
    arguments: >
      push $(Build.ArtifactStagingDirectory)/*.nupkg
      -s https://api.nuget.org/v3/index.json
      -k $(nugetApiKey)
